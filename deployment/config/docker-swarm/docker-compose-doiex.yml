version: "3.7"
services:

  database:
    image: doiex/database:${DATABASE_DOCKER_IMAGE_TAG}
    depends_on:
      - log_collector
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: doiex
      SCMS_DB_PASSWORD: ${NODEJS_DB_PASSWORD}
    volumes:
      - type: volume
        source: pgdata-3
        target: /var/lib/postgresql/data
    networks:
      - doiex_database
    logging:
      driver: "fluentd"
      options:
        tag: database
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
        failure_action: rollback
      resources:
        limits:
          memory: 400M
        reservations:
          memory: 100M

  collector:
    image: doiex/collector:${COLLECTOR_DOCKER_IMAGE_TAG}
    depends_on:
      - log_collector
      - parser
    environment:
      HOST_NAME: ${HOST_NAME}
      SERVICE_NAME: "Doiex Collector Service"
      SERVICE_PARSER_HOSTNAME: "doiex_parser"
      SERVICE_PARSER_PORT: 3000
    networks:
      - reverse_proxy
      - doiex_services
    logging:
      driver: "fluentd"
      options:
        tag: collector
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
        failure_action: rollback
      labels:
        - "traefik.enable=true"
        - "traefik.backend=collector"
        - "traefik.docker.network=reverse_proxy"
        - "traefik.port=3000"
        - "traefik.backend.loadbalancer.swarm=true"
        - "traefik.frontend.entryPoints=http,https"
        - "traefik.frontend.rule=Host:${HOST_NAME}; PathPrefix:/collector; PathPrefixStrip:/collector"
        - "traefik.frontend.auth.basic=api:$$apr1$$r2b2cwaf$$gqW2RZAHUFIniU9gHuv7X1"

  parser:
    image: doiex/parser:${PARSER_DOCKER_IMAGE_TAG}
    depends_on:
      - log_collector
      - database
    environment:
      HOST_NAME: ${HOST_NAME}
      SERVICE_NAME: "Doiex Parser Service"
      SERVICE_PERSISTER_HOSTNAME: "doiex_persister"
      SERVICE_PERSISTER_PORT: 3000
    networks:
      - doiex_services
      - doiex_database
    logging:
      driver: "fluentd"
      options:
        tag: parser
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
        failure_action: rollback

  persister:
    image: doiex/persister:${PERSISTER_DOCKER_IMAGE_TAG}
    depends_on:
      - log_collector
      - database
    environment:
      HOST_NAME: ${HOST_NAME}
      SERVICE_NAME: "Doiex Parser Service"
      DOIEX_DB_HOST: doiex_database
      DOIEX_DB_PORT: 5432
      DOIEX_DB_NAME: doiex
      DOIEX_DB_USER: doiex_persister_app
      DOIEX_DB_PASSWORD: ${DOIEX_DB_PASSWORD}
    networks:
      - doiex_services
      - doiex_database
    logging:
      driver: "fluentd"
      options:
        tag: persister
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
        failure_action: rollback

volumes:
  pgdata-3:

networks:
  doiex_services:
    external: true
    name: doiex_services
  doiex_database:
    external: true
    name: doiex_database
  reverse_proxy:
    external: true
    name: reverse_proxy
